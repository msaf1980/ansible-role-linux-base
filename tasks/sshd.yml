---
- name: SSHD | Ensure specified packages are installed
  package:
    name: "{{ ssh_packages }}"
    state: present
  tags:
    - base
    - install

- name: SSHD | Disable reverse DNS lookup for SSH
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^UseDNS'
    line: "UseDNS no"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set protocol version for SSH
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^Protocol'
    line: "Protocol {{ sshd_protocol_version }}"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set PermitEmptyPasswords
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^PermitEmptyPasswords'
    insertafter: '^#PermitEmptyPasswords'
    line: "PermitEmptyPasswords {{ sshd_permitemptypasswords }}"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set PasswordAuthentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^PasswordAuthentication'
    insertafter: '^#PasswordAuthentication'
    line: "PasswordAuthentication {{ sshd_passwordauthentication }}"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set IgnoreRhosts
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^IgnoreRhosts'
    insertafter: '^#IgnoreRhosts'
    line: "IgnoreRhosts {{ sshd_ignorerhosts }}"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set HostbasedAuthentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^HostbasedAuthentication'
    insertafter: '^#HostbasedAuthentication'
    line: "HostbasedAuthentication {{ sshd_hostbasedauthentication }}"
  notify: restart sshd
  tags:
    - base
    - config
    - sshd

- name: SSHD | Set RhostsRSAAuthentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: yes
    regexp: '^RhostsRSAAuthentication'
    insertafter: '^#RhostsRSAAuthentication'
    line: "RhostsRSAAuthentication {{ sshd_rhostsrsaauthentication }}"
  notify: restart sshd
  when: >
    (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 19)
    or
    (ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 10)
    or
    (ansible_distribution in ["RedHat", "CentOS", "OracleLinux"] and ansible_distribution_major_version|int < 8)

  tags:
    - base
    - config
    - sshd

- name: SSHD | Make sure only these groups can ssh
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: true
    regexp: '^AllowGroups'
    line: "AllowGroups {{ ' '.join(sshd_allow_groups) }}"
  when: sshd_allow_groups is defined
  notify: restart sshd
  tags:
    - base
    - sshd
    - admin

- name: SSHD | Root login over ssh
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: true
    regexp: '^PermitRootLogin'
    line: "PermitRootLogin {{ sshd_permitrootlogin }}"
  notify: restart sshd
  tags:
    - base
    - sshd
    - admin

- name: SSHD | MaxAuthTries
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    create: true
    regexp: '^MaxAuthTries'
    line: "MaxAuthTries {{ sshd_maxauthtries }}"
  when: sshd_maxauthtries is defined
  notify: restart sshd
  tags:
    - base
    - sshd
    - admin

- name: SSHD | Inject local configuration
  blockinfile:
    block: "{{ lookup('file', '{{ sshd_config_local }}') }}"
    dest: /etc/ssh/sshd_config
    validate: /usr/sbin/sshd -t -f %s
  when: sshd_config_local is defined
  notify: restart sshd
  tags:
    - base
    - sshd
    - admin

- name: SSHD | Enable sshd service
  service:
    name: "{{ sshd_service }}"
    state: started
    enabled: true
  tags:
    - base
    - config
    - sshd
