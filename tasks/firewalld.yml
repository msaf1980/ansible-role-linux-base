# Basic firewalld settings
---

- name: Firewalld | Select nftables firewalld backend
  set_fact:
    firewalld_backend: "nftables"
  when: >
    firewalld_backend is not defined
    and
    (
      (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 18)
      or
      (ansible_distribution == 'Debian' and ansible_distribution_major_version|int >= 10)
      or
      (ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux'] and ansible_distribution_major_version|int >= 8)
      or
      (ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 31)
    )

- name: Firewalld | Role/Ansible dependencies
  package:
    name: "{{ dependencies_firewalld }}"
    state: present
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Configure backend {{ firewalld_backend }}
  lineinfile:
    dest: "/etc/firewalld/firewalld.conf"
    line: "FirewallBackend={{ firewalld_backend }}"
    regexp: "^FirewallBackend="
  notify:
    - restart firewalld
  when: firewalld_backend is defined
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Make sure the firewall is running
  service:
    name: firewalld
    state: started
    enabled: true
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Create zones
  firewalld:
    zone: "{{ item }}"
    permanent: true
    state: present
  with_items: "{{ firewalld_zones }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Make sure basic services can pass through firewall
  firewalld:
    service: "{{ item }}"
    permanent: true
    state: enabled
    zone: "public"
  with_items:
    - dhcpv6-client
    - ssh
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Make sure user specified services can pass through firewall
  firewalld:
    service: "{{ item }}"
    permanent: true
    state: enabled
    zone: "public"
  with_items: "{{ firewalld_allow_services }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Make sure user specified ports can pass through firewall
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    zone: "public"
  with_items: "{{ firewalld_allow_ports }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Make sure user specified rules can pass through firewall
  firewalld:
    rich_rule: "{{ item }}"
    permanent: true
    state: enabled
    zone: "public"
  with_items: "{{ firewalld_allow_rules }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Remove specified services
  firewalld:
    service: "{{ item }}"
    permanent: true
    state: disabled
    zone: "public"
  with_items: "{{ firewalld_remove_services }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Remove specified ports
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: disabled
    zone: "public"
  with_items: "{{ firewalld_remove_ports }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall

- name: Firewalld | Remove specified rules
  firewalld:
    rich_rule: "{{ item }}"
    permanent: true
    state: disabled
    zone: "public"
  with_items: "{{ firewalld_remove_rules }}"
  notify:
    - restart firewalld
  tags:
    - base
    - security
    - firewall
